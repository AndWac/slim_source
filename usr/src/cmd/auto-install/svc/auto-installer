#!/sbin/sh
#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
#
# Copyright 2008 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#

# Auto installer
AI_ENGINE=/usr/bin/auto-install
# Service Discovery Engine
AISD_ENGINE=/usr/bin/ai_sd
# Service Choosing Engine
AISC_ENGINE=/usr/bin/ai_get_manifest
# Auto install and System Configuration combined manifest
AISC_MANIFEST=/tmp/ai_combined_manifest.xml
# List of services which Service Discovery Engine will
# contact for obtaining the manifest
AI_SERVICE_LIST=/tmp/service_list.$$
# debug mode
AI_DBGLVL=4
# timeout for service discovery process
AI_TIMEOUT=5

. /lib/svc/share/smf_include.sh

#
# If 'install_service_address' variable was provided
# by menu.lst, skip service discovery phase and directly
# contact given machine
#
AI_SERVICE_ADDRESS=`/usr/sbin/prtconf -v /devices | \
    /usr/bin/sed -n '/install_service_address/{;n;p;}' | \
    /usr/bin/cut -f 2 -d \'`

if [ -n "$AI_SERVICE_ADDRESS" ] ; then
	echo "AI Service location provided, skipping service discovery"
	echo "$AI_SERVICE_ADDRESS" > $AI_SERVICE_LIST
else
	#
	# Invoke AI Service Discovery engine. It obtains list of
	# available install services. Name of the service to look up
	# is passed from GRUB 'menu.lst' by 'install_service' variable.
	# If this variable is not set, only default install service
	# is to be looked up
	#
	if [ ! -x  $AISD_ENGINE ] ; then
		echo "Couldn't find Auto Installer Service Discovery Engine"
		exit $SMF_EXIT_ERR_FATAL
	fi

	# get name of service to look up
	AI_SERVICE_NAME=`/usr/sbin/prtconf -v /devices | \
	    /usr/bin/sed -n '/install_service/{;n;p;}' | \
	    /usr/bin/cut -f 2 -d \'`

	if [ -n "$AI_SERVICE_NAME" ] ; then
		echo "Service name to look up: " $AI_SERVICE_NAME

		$AISD_ENGINE -n $AI_SERVICE_NAME -o $AI_SERVICE_LIST \
		    -t $AI_TIMEOUT -d $AI_DBGLVL
	else
		echo "Service name not provided, " \
		    "only default will be looked up"

		$AISD_ENGINE -o $AI_SERVICE_LIST -t $AI_TIMEOUT -d $AI_DBGLVL
	fi

	if [ $? -ne 0 ] ; then
		echo "Service discovery failed"
		exit $SMF_EXIT_ERR_FATAL
	fi
fi

#
# Invoke AI Service choosing engine. It takes list of install
# services to connect and tries to obtain valid manifest
#

if [ ! -x  $AISC_ENGINE ] ; then
	echo "Couldn't find Auto Installer Service Choosing Engine"
	exit $SMF_EXIT_ERR_FATAL
fi

$AISC_ENGINE -s $AI_SERVICE_LIST -o $AISC_MANIFEST -d $AI_DBGLVL

if [ $? -ne 0 ] ; then
	echo "Couldn't obtain valid Auto Install manifest"
	exit $SMF_EXIT_ERR_FATAL
fi

#
# Copy files required by XML validator to the same directory where AI manifest
# was stored. This is just temporary solution, better approach should be
# work out for long term
#

if [ ! -f /usr/share/auto_install/ai_manifest.rng ] ; then
	echo "Couldn't find /usr/share/auto_install/ai_manifest.rng"
	exit $SMF_EXIT_ERR_FATAL
fi
/usr/bin/cp /usr/share/auto_install/ai_manifest.rng /tmp/

if [ ! -f /usr/share/auto_install/ai_manifest.defval.xml ] ; then
	echo "Couldn't find /usr/share/auto_install/ai_manifest.defval.xml"
	exit $SMF_EXIT_ERR_FATAL
fi
/usr/bin/cp /usr/share/auto_install/ai_manifest.defval.xml /tmp/

#
# Call AI engine to carry out real installation
#

if [ ! -x  $AI_ENGINE ] ; then
	echo "Couldn't find Auto Installer engine"
	exit $SMF_EXIT_ERR_FATAL
fi

$AI_ENGINE -p $AISC_MANIFEST
ret = $?

if [ ret -ne 0 ] ; then
	echo "Automated Installation failed - error " $ret
	exit $SMF_EXIT_ERR_FATAL
fi

exit $SMF_EXIT_OK
